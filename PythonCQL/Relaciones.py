from neo4j import GraphDatabase

# Conexión a la base de datos Neo4j
uri = "bolt://localhost:7687"  # Cambia esto según tu configuración
username = "neo4j"
password = "KEANUREEVES" # Cambia esto según tu contraseña
driver = GraphDatabase.driver(uri, auth=(username, password))

# Definir los IDs de los perfiles y de las películas
perfil_ids = [1, 2, 3, 4, 5]  # Lista de IDs de perfiles
pelicula_ids = ['s2418', 's626']  # Lista de IDs de películas

peliculas = ["s1", "s10", "s100", "s1000", "s1001", "s1002", "s1003", "s1004", "s1005", "s1006", "s1007", "s1008", "s1009", "s101", "s1010", "s1011", "s1012", "s1013", "s1014", "s1015", "s1016", "s1017", "s1018", "s1019", "s102", "s1020", "s1021", "s1022", "s1023", "s1024", "s1025", "s1026", "s1027", "s1028", "s1029", "s103", "s1030", "s1031", "s1032", "s1033", "s1034", "s1035", "s1036", "s1037", "s1038", "s1039", "s104", "s1040", "s1041", "s1042", "s1043", "s1044", "s1045", "s1046", "s1047", "s1048", "s1049", "s105", "s1050", "s1051", "s1052", "s1053", "s1054", "s1055", "s1056", "s1057", "s1058", "s1059", "s106", "s1060", "s1061", "s1062", "s1063", "s1064", "s1065", "s1066", "s1067", "s1068", "s1069", "s107", "s1070", "s1071", "s1072", "s1073", "s1074", "s1075", "s1076", "s1077", "s1078", "s1079", "s108", "s1080", "s1081", "s1082", "s1083", "s1084", "s1085", "s1086", "s1087", "s1088", "s1089", "s109", "s1090", "s1091", "s1092", "s1093", "s1094", "s1095", "s1096", "s1097", "s1098", "s1099", "s11", "s110", "s1100", "s1101", "s1102", "s1103", "s1104", "s1105", "s1106", "s1107", "s1108", "s1109", "s111", "s1110", "s1111", "s1112", "s1113", "s1114", "s1115", "s1116", "s1117", "s1118", "s1119", "s112", "s1120", "s1121", "s1122", "s1123", "s1124", "s1125", "s1126", "s1127", "s1128", "s1129", "s113", "s1130", "s1131", "s1132", "s1133", "s1134", "s1135", "s1136", "s1137", "s1138", "s1139", "s114", "s1140", "s1141", "s1142", "s1143", "s1144", "s1145", "s1146", "s1147", "s1148", "s1149", "s115", "s1150", "s1151", "s1152", "s1153", "s1154", "s1155", "s1156", "s1157", "s1158", "s1159", "s116", "s1160", "s1161", "s1162", "s1163", "s1164", "s1165", "s1166", "s1167", "s1168", "s1169", "s117", "s1170", "s1171", "s1172", "s1173", "s1174", "s1175", "s1176", "s1177", "s1178", "s1179", "s118", "s1180", "s1181", "s1182", "s1183", "s1184", "s1185", "s1186", "s1187", "s1188", "s1189", "s119", "s1190", "s1191", "s1192", "s1193", "s1194", "s1195", "s1196", "s1197", "s1198", "s1199", "s12", "s120", "s1200", "s1201", "s1202", "s1203", "s1204", "s1205", "s1206", "s1207", "s1208", "s1209", "s121", "s1210", "s1211", "s1212", "s1213", "s1214", "s1215", "s1216", "s1217", "s1218", "s1219", "s122", "s1220", "s1221", "s1222", "s1223", "s1224", "s1225", "s1226", "s1227", "s1228", "s1229", "s123", "s1230", "s1231", "s1232", "s1233", "s1234", "s1235", "s1236", "s1237", "s1238", "s1239", "s124", "s1240", "s1241", "s1242", "s1243", "s1244", "s1245", "s1246", "s1247", "s1248", "s1249", "s125", "s1250", "s1251", "s1252", "s1253", "s1254", "s1255", "s1256", "s1257", "s1258", "s1259", "s126", "s1260", "s1261", "s1262", "s1263", "s1264", "s1265", "s1266", "s1267", "s1268", "s1269", "s127", "s1270", "s1271", "s1272", "s1273", "s1274", "s1275", "s1276", "s1277", "s1278", "s1279", "s128", "s1280", "s1281", "s1282", "s1283", "s1284", "s1285", "s1286", "s1287", "s1288", "s1289", "s129", "s1290", "s1291", "s1292", "s1293", "s1294", "s1295", "s1296", "s1297", "s1298", "s1299", "s13", "s130", "s1300", "s1301", "s1302", "s1303", "s1304", "s1305", "s1306", "s1307", "s1308", "s1309", "s131", "s1310", "s1311", "s1312", "s1313", "s1314", "s1315", "s1316", "s1317", "s1318", "s1319", "s132", "s1320", "s1321", "s1322", "s1323", "s1324", "s1325", "s1326", "s1327", "s1328", "s1329", "s133", "s1330", "s1331", "s1332", "s1333", "s1334", "s1335", "s1336", "s1337", "s1338", "s1339", "s134", "s1340", "s1341", "s1342", "s1343", "s1344", "s1345", "s1346", "s1347", "s1348", "s1349", "s135", "s1350", "s1351", "s1352", "s1353", "s1354", "s1355", "s1356", "s1357", "s1358", "s1359", "s136", "s1360", "s1361", "s1362", "s1363", "s1364", "s1365", "s1366", "s1367", "s1368", "s1369", "s137", "s1370", "s1371", "s1372", "s1373", "s1374", "s1375", "s1376", "s1377", "s1378", "s1379", "s138", "s1380", "s1381", "s1382", "s1383", "s1384", "s1385", "s1386", "s1387", "s1388", "s1389", "s139", "s1390", "s1391", "s1392", "s1393", "s1394", "s1395", "s1396", "s1397", "s1398", "s1399", "s14", "s140", "s1400", "s1401", "s1402", "s1403", "s1404", "s1405", "s1406", "s1407", "s1408", "s1409", "s141", "s1410", "s1411", "s1412", "s1413", "s1414", "s1415", "s1416", "s1417", "s1418", "s1419", "s142", "s1420", "s1421", "s1422", "s1423", "s1424", "s1425", "s1426", "s1427", "s1428", "s1429", "s143", "s1430", "s1431", "s1432", "s1433", "s1434", "s1435", "s1436", "s1437", "s1438", "s1439", "s144", "s1440", "s1441", "s1442", "s1443", "s1444", "s1445", "s1446", "s1447", "s1448"]



# Crear relaciones entre perfiles y películas
def crear_relaciones(session, perfil_ids, pelicula_ids):
    for perfil_id in perfil_ids:
        for pelicula_id in pelicula_ids:
            query = (
                f"MATCH (p:Profile {{id:{perfil_id}}}), (m:Movie {{id:'{pelicula_id}'}}) "
                "MERGE (p)-[:ADD]->(m)"
            )
            session.run(query)

# Ejecutar el bucle para crear relaciones
with driver.session() as session:
    crear_relaciones(session, perfil_ids, pelicula_ids)

# Cerrar la conexión al terminar
driver.close()

